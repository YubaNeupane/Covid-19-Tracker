{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","components/Navbar/Navbar.jsx","App.js","index.js","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCounties","setFetchedCounties","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","navBar","href","App","state","fetchedData","setState","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cc20233a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__SAGac\",\"card\":\"Cards_card__1mFh4\",\"infected\":\"Cards_infected__wXeLc\",\"recovered\":\"Cards_recovered__3z7aa\",\"deaths\":\"Cards_deaths__3sx6k\"};","import React from 'react'\r\nimport {Card, CardContent, Typography, Grid} from '@material-ui/core'\r\nimport CountUp from 'react-countup'\r\nimport cx from 'classnames'\r\n\r\nimport styles from './Cards.module.css'\r\n\r\nconst Cards = ({data:{confirmed, recovered, deaths, lastUpdate}})=>{\r\n    if(!confirmed){\r\n        return 'Loading...'\r\n    }\r\n    return(\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify='center'>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color='textSecondary' gutterBottom>Infected</Typography>\r\n                        <Typography variant='h5'>\r\n                            <CountUp start={0} end={confirmed.value} duration={2.5} separator=','/>\r\n                        </Typography>\r\n                        <Typography color='textSecondary'>{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant='body2'>Number of active cases of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color='textSecondary' gutterBottom>Recovered</Typography>\r\n                        <Typography variant='h5'>\r\n                            <CountUp start={0} end={recovered.value} duration={2.5} separator=','/>\r\n                        </Typography>\r\n                        <Typography color='textSecondary'>{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant='body2'>Number of recoveries from COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color='textSecondary' gutterBottom>Deaths</Typography>\r\n                        <Typography variant='h5'>\r\n                        <CountUp start={0} end={deaths.value} duration={2.5} separator=','/>\r\n                        </Typography>\r\n                        <Typography color='textSecondary'>{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant='body2'>Number of deaths caused by COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards","import axios from 'axios'\r\n\r\nconst url = 'https://covid19.mathdro.id/api'\r\n\r\nexport const fetchData = async (country)=>{\r\n    let changeableUrl = url;\r\n    if(country){\r\n        changeableUrl = `${url}/countries/${country}`\r\n    }\r\n\r\n    try {\r\n        const {data:{confirmed, recovered, deaths, lastUpdate} } =  await axios.get(changeableUrl)\r\n\r\n        return {confirmed, recovered, deaths, lastUpdate};\r\n    }catch(error){\r\n        console.log(error)\r\n    }\r\n\r\n}\r\n\r\nexport const fetchDailyData = async()=>{\r\n    try {\r\n        const {data} = await axios.get(`${url}/daily`);\r\n\r\n        const modifiedData = data.map((dailyData)=>({\r\n            confirmed:dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate\r\n\r\n        }))\r\n\r\n        return modifiedData\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () =>{\r\n    try {\r\n        const {data:{countries}} = await axios.get(`${url}/countries`)\r\n        return countries.map((country)=> country.name)\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}","import React,{useState, useEffect} from 'react'\r\nimport {fetchDailyData} from '../../api'\r\nimport {Line, Bar} from 'react-chartjs-2'\r\n\r\nimport styles from './Chart.module.css';\r\n\r\n\r\n\r\nconst Chart = ({data:{confirmed, recovered,deaths},country})=>{\r\n    const[dailyData, setDailyData] = useState([])\r\n    \r\n    useEffect(()=>{\r\n        const fetchAPI =  async ()=>{\r\n            setDailyData( await fetchDailyData())\r\n\r\n\r\n        }\r\n        fetchAPI()\r\n    },[])\r\n\r\n    const lineChart=(\r\n        dailyData.length ? (\r\n        <Line \r\n            data={{\r\n                labels:dailyData.map(({date})=>date),\r\n                datasets:[{\r\n                    data: dailyData.map(({confirmed}) => confirmed),\r\n                    label: 'Infected',\r\n                    borderColor:'#3333ff',\r\n                    fill:true\r\n                },{\r\n                    data: dailyData.map(({deaths}) => deaths),\r\n                    label: 'Deaths',\r\n                    borderColor:'red',\r\n                    backgroundColor:'rgba(255,0,0,0.5)',\r\n                    fill:true\r\n                }],\r\n\r\n            }}\r\n        />\r\n        ):null\r\n    )\r\n\r\n    const barChart = (\r\n        confirmed ?(\r\n                <Bar\r\n                data={{\r\n                  labels: ['Infected', 'Recovered', 'Deaths'],\r\n                  datasets: [\r\n                    {\r\n                      label: 'People',\r\n                      backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n                      data: [confirmed.value, recovered.value, deaths.value],\r\n                    },\r\n                  ],\r\n                }}\r\n                options={{\r\n                  legend: { display: false },\r\n                  title: { display: true, text: `Current state in ${country}` },\r\n                }}\r\n              />\r\n            ):null\r\n    )\r\n\r\n\r\n    return(\r\n        <div className={styles.container}>\r\n            {country? barChart:lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart","import React,{useState,useEffect} from 'react'\r\nimport {NativeSelect, FormControl} from '@material-ui/core'\r\nimport styles from './CountryPicker.module.css'\r\nimport {fetchCountries} from '../../api'\r\n\r\nconst CountryPicker = ({handleCountryChange})=>{\r\n\r\n    const[fetchedCounties,setFetchedCounties] = useState([])\r\n\r\n    useEffect(()=>{\r\n        const fetchAPI = async()=>{\r\n            setFetchedCounties(await fetchCountries())\r\n        }\r\n        fetchAPI()\r\n\r\n    },[setFetchedCounties])\r\n    return(\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e)=>handleCountryChange(e.target.value)}>\r\n                <option value=''>Global</option>\r\n                {fetchedCounties.map((country,i)=><option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker","import React from 'react';\r\n\r\n\r\n\r\nexport default function navBar() {\r\n  return (\r\n    <nav>\r\n    <div className=\"nav-wrapper\">\r\n      <a href=\"#!\" className=\"brand-logo center\">COVID-19</a>\r\n    </div>\r\n  </nav>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\n\r\n\r\nimport {Cards, Chart, CountryPicker,NavBar} from './components'\r\nimport styles from './App.module.css';\r\nimport {fetchData} from './api'\r\n\r\n\r\n\r\nclass App extends React.Component{\r\n\r\n    state = {\r\n        data:{},\r\n        country:''\r\n    }\r\n   \r\n    async componentDidMount(){\r\n        const fetchedData =  await fetchData()\r\n        this.setState({data: fetchedData})\r\n    }\r\n\r\n    handleCountryChange = async(country)=>{\r\n        const fetchedData =  await fetchData(country)\r\n        this.setState({data: fetchedData,country:country})\r\n\r\n    }\r\n\r\n    render(){\r\n        const { data, country } = this.state;\r\n        return(\r\n            <div>\r\n                <NavBar/>\r\n                <div className={styles.container}>\r\n                    <Cards data={data} />\r\n                    <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n                    <Chart data={data} country={country} /> \r\n                </div>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport App from './App'\r\n\r\nReactDOM.render(<App/>,document.getElementById('root'))","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1kHfL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__1KZ1D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2xZCu\",\"image\":\"App_image__2aUQC\"};"],"sourceRoot":""}